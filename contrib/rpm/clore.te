policy_module(clore, 1.100.1)

########################################
#
# Declarations
#

type clore_t;
type clore_exec_t;
init_daemon_domain(clore_t, clore_exec_t)

permissive clore_t;

type clore_initrc_exec_t;
init_script_file(clore_initrc_exec_t)

type clore_conf_t;
files_type(clore_conf_t)

type clore_var_lib_t;
files_type(clore_var_lib_t)

type clore_var_run_t;
files_type(clore_var_run_t)

type clore_port_t;
corenet_port(clore_port_t)

########################################
#
# clore local policy
#
allow clore_t self:process { fork };

allow clore_t self:fifo_file rw_fifo_file_perms;
allow clore_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(clore_t, clore_conf_t, clore_conf_t)
manage_files_pattern(clore_t, clore_conf_t, clore_conf_t)

manage_dirs_pattern(clore_t, clore_var_lib_t, clore_var_lib_t)
manage_files_pattern(clore_t, clore_var_lib_t, clore_var_lib_t)
files_var_lib_filetrans(clore_t, clore_var_lib_t, { dir file })

manage_dirs_pattern(clore_t, clore_var_run_t, clore_var_run_t)
manage_files_pattern(clore_t, clore_var_run_t, clore_var_run_t)

sysnet_dns_name_resolve(clore_t)
corenet_all_recvfrom_unlabeled(clore_t)

allow clore_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(clore_t)
corenet_tcp_sendrecv_generic_node(clore_t)
corenet_tcp_sendrecv_all_ports(clore_t)
corenet_tcp_bind_generic_node(clore_t)

gen_require(`
    type clore_port_t;
')
allow clore_t clore_port_t:tcp_socket name_bind;

gen_require(`
    type clore_port_t;
')
allow clore_t clore_port_t:tcp_socket name_connect;

domain_use_interactive_fds(clore_t)

files_read_etc_files(clore_t)

miscfiles_read_localization(clore_t)

sysnet_dns_name_resolve(clore_t)

allow clore_t clore_exec_t:file execute_no_trans;
allow clore_t self:process setsched;
corecmd_exec_ls(clore_t)
corenet_tcp_connect_http_port(clore_t)
dev_read_urand(clore_t)
fs_getattr_xattr_fs(clore_t)
kernel_read_system_state(clore_t)
